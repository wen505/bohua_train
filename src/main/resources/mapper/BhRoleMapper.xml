<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bh.train.dao.BhRoleMapper" >
  <resultMap id="BaseResultMap" type="com.bh.train.model.BhRole" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="enabled_flag" property="enabledFlag" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, role_name, memo, enabled_flag, add_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bh_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bh_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bh.train.model.BhRole" >
    <selectKey resultType="java.lang.Integer" keyProperty="roleId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bh_role (role_name, memo, enabled_flag, 
      add_time, update_time)
    values (#{roleName,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, #{enabledFlag,jdbcType=VARCHAR}, 
      #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bh.train.model.BhRole" >
    <selectKey resultType="java.lang.Integer" keyProperty="roleId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bh_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="enabledFlag != null" >
        enabled_flag,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="enabledFlag != null" >
        #{enabledFlag,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bh.train.model.BhRole" >
    update bh_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="enabledFlag != null" >
        enabled_flag = #{enabledFlag,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bh.train.model.BhRole" >
    update bh_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      enabled_flag = #{enabledFlag,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <!--查询角色 并关联用户-->
  <select id="selectRoleelevancyRUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
      SELECT r.*,u.login_name AS  isBindUser FROM bh_role r
      LEFT JOIN bh_user_role  ur  ON r.role_id=ur.role_id
      LEFT JOIN (SELECT * FROM bh_user WHERE user_id =#{userId,jdbcType=INTEGER} ) u ON ur.user_id = u.user_id
      WHERE r.enabled_flag='Y'
  </select>
</mapper>